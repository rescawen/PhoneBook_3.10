{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","setPersons","map","person","key","name","number","onClick","window","confirm","filter","p","personService","Notification","message","success","className","text","App","useState","setNewName","setNewNumber","notificationMessage","setNotificationMessage","useEffect","initialPersons","nofiticationMessage","setTimeout","event","toLowerCase","includes","target","preventDefault","personObject","personID","find","updatedPerson","concat","catch","error","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9af4d43d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ handleFilterChange }) => {\r\n  return (\r\n    <div>filter shown with<input onChange={handleFilterChange} /></div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n      <div>\r\n        <form onSubmit={addPerson}>\r\n          <div>\r\n            name: <input\r\n              value={newName}\r\n              onChange={handleNameChange}\r\n            />\r\n          </div>\r\n          <div>number: <input\r\n            value={newNumber}\r\n            onChange={handleNumberChange} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  export default { getAll, create, update, remove }","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Persons = ({ persons, setPersons }) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person =>\r\n        <div key={person.id}>{person.name} {person.number}\r\n          <button onClick={() => window.confirm(`Delete ${person.name} ?`)\r\n            ? setPersons(persons.filter(p => p.id !== person.id)) & personService.remove(person.id)\r\n            : null}>\r\n            delete\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  } else if (message.success) {\r\n    return (\r\n        <div className=\"notification success\">\r\n          {message.text}\r\n        </div>\r\n      )\r\n  } else if (!message.success) {\r\n    return (\r\n        <div className=\"notification failure\">\r\n          {message.text}\r\n        </div>\r\n      )  \r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from \"./components/Filter\"\r\nimport PersonForm from \"./components/PersonForm\"\r\nimport Persons from \"./components/Persons\"\r\nimport Notification from \"./components/Notification\"\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const nofiticationMessage = () => {\r\n    setNotificationMessage({ text: `Added ${newName}`, success: true })\r\n    setTimeout(() => {\r\n      setNotificationMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObject = { name: newName, number: newNumber }\r\n    if (!persons.map(person => person.name).includes(newName)) {\r\n      personService\r\n        .create(personObject)\r\n        .then(newPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n          nofiticationMessage()\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage(\r\n            {\r\n              text: error.response.data.error,\r\n              success: false\r\n            })\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    } else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n      const personID = persons.find(person => person.name === newName).id\r\n      personService\r\n        .update(personID, personObject)\r\n        .then(updatedPerson => {\r\n          setPersons(persons.filter(p => p.id !== personID).concat(updatedPerson))\r\n          nofiticationMessage()\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage(\r\n            {\r\n              text: error.response.data.error,\r\n              success: false\r\n            })\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n          // setNotificationMessage(\r\n          //   {\r\n          //     text: `Information of ${newName} has already been removed from server`,\r\n          //     success: false\r\n          //   })\r\n          // setTimeout(() => {\r\n          //   setNotificationMessage(null)\r\n          // }, 5000)\r\n          // setPersons(persons.filter(p => p.id !== personID))\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleFilterChange = (event) => setPersons(persons.filter(person => person.name.toLowerCase().includes(event.target.value)))\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} />\r\n      <Filter handleFilterChange={handleFilterChange} />\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}